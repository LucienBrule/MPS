//------------------------------------
// Lab 3 - Part 1: UART - Lab03_uart.c
//------------------------------------
//

/*
 * UART information:
 * 	textbook page 221
 * 	reference manual page 1241
 * 	USART1 and 6 setup in uart.c
 */
#include "init.h"
UART_HandleTypeDef uart6;

void polling_receive(){
	uint8_t uart1_recv[1];
	uint8_t uart6_recv[1];
	while(1){
		uart1_recv[0] = 0;
		uart6_recv[0] = 0;
		// get char from each uart
		HAL_UART_Receive(&uart6, uart6_recv, 1, 0);
		HAL_UART_Receive(&USB_UART, uart1_recv, 1, 0);
//		printf("uart6_recv: %x\r\n", uart6_recv[0]);
		if(uart1_recv[0]){
			HAL_UART_Transmit(&USB_UART,uart1_recv,1, 0);
			HAL_UART_Transmit(&uart6,uart1_recv,1, 0);
		}
		if(uart6_recv[0]){
			HAL_UART_Transmit(&USB_UART,uart6_recv,1, 0);
			HAL_UART_Transmit(&uart6, uart6_recv,1, 0);
		}
	}
}

void interrupt_init(){
	HAL_NVIC_SetPriority(USART6_IRQn, 0, 0);
	HAL_NVIC_EnableIRQ(USART6_IRQn);

}

// Main Execution Loop
int main(void) {
	//Initialize the system
	Sys_Init();
	//Initialize GPIO for UART
	initUart(&uart6,9600,USART6);

	// Broadcast over both UART that we are starting.
	uart_print(&uart6,"\r\n[INFO] UART6 9600\r\n");
	uart_print(&USB_UART,"\r\n[INFO] UART1 115200\r\n");
	//start the listen loop
//	TASK 2
//	polling_receive();
//	TASK 3:
	//initialize uart interrupt
	interrupt_init();
	// spin forever
	uint8_t test_a[1]  = {'A'};
	uint8_t test_b[1]  = {'B'};
	uint8_t input_buffer[1] ;

	while(1){
//		HAL_UART_Transmit(&USB_UART,test_a,1, 0);
//		HAL_UART_Transmit_IT(&USB_UART,test_b,1);
//		HAL_UART_Transmit(&uart6,test_a,1, 0);
//		HAL_UART_Transmit_IT(&uart6,test_b,1);
//		HAL_UART_Receive_IT(&uart6,test_b,1);
//		printf("Input buffer is: %c\r\n", input_buffer[0]);


		HAL_Delay(100);
	}
}
void USART1_IRQHandler(){
	printf("IRQ 1 handler called\r\n");
	HAL_UART_IRQHandler(&USB_UART);
}
void USART6_IRQHandler(){
	printf("IRQ 6 handler called\r\n");

	HAL_UART_IRQHandler(&uart6);
}
//Interrupt routine to handle received data
void HAL_UART_RxCpltCallback(UART_HandleTypeDef *UartHandle){
	if(UartHandle->Instance == USART6){
		uint8_t recv[1] = {0x00};
		HAL_UART_Receive_IT(&uart6,recv,1);
		HAL_UART_Transmit(&USB_UART,recv,1, 0);
		HAL_UART_Transmit(&uart6, recv,1, 0);
	}
	printf("Received data!\r\n");
}
